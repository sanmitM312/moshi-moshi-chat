use the dot-env package
and make the env file.

for creating multiple routes in the frontend
react-router-dom has to be used.

exact is required inside the '/' Route for proper rendering
also a proxy : "http://localhost:5000" alongwith cors is required for axios call to work

Video 7:
Creating the UI for the homepage login and /chats
    - font using work sans light 300(search in google)
    HomePage(Login/SignUp dashboard design)
      - instead of div use Box from chakra
      - for tab switch, use tabs from chakra
      - for forms inside the tab switch,use vstack from chakra
      - FormControl for each of the forms(for input)

Video 8:
Important stuff to keep in mind for configuring mongodb for the project.
  - keep the .env file in the root of the backend folder, i.e inside ../backend
  - remove the angular braces from the <password>
  - use db.config() before connectDB()

Video 9:
Authentication
  backend
  - the registerUser is wrapped inside asyncHandler 
    in controllers/userController.js [read more]
  - while creating the post request, also create a jwt token and send it.
  - separate functions are made in controller.js for registerUser and authUser.

  
  frontend
    - the authentication components are login and signup componenets.
    - use toast-chakra-ui for inbuilt components
    - useHistory() also required for it.
    - the post data for the image is sent to cloudinary (go to settings->enable preset data-> make it unsigned)
    - to send the data after submitting, create a data objects with headers and the body and send it via axios, after successful response from the backend, the /chats route is loaded

Video10
 chat api 
    - using $or in allUsers in userControllers in mongodb {if either expr true return true}
      $ne is not equal
  - a auth middleware is required for the search functionality.
  chatRoute
  - concept of $and, $elemMatch
  - *** vvimp.populate, since we are referencing to User and Message schemas as well, we need this to fetch the respective fields.
  - accessChat is the most important api in the chat apis, study it again
  - various mongoose commands used are: $push, $pull

Video 11: 
Context API , frontend of the search 
  - context state is made accessible to other parts of our app using useContext hook.
  - passing the global states to Context Provider by sending the states as values.
  <Complete these notes later>


Video 13
   - ig it was the same concepts for the controllers as before

Video 14
  - Chat Box UI

Essential features done
TODO
 - fix the real-time messaging
 - Change the UIs a lot as much as possible without breaking the code
 - implement image sending functionality
 